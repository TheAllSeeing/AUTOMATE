#!/bin/bash


# --- Complex Functions ---

launch-shell() {
    shell_path=$1
    shell_name=$2
    shell_id=$3

	echo "$shell_name ID $shell_id"

	echo "Finding $shell_name window"
	if focus -n "$shell_id"; then
		echo "Found"
	else
        if xfce4-terminal -e "tmux -u new $shell_path"  # "sh -c 'tmux set-option default-shell $shell_path && tmux -u'";
        then
            until focus -n "$shell_id"; do sleep 0.1; done; # Focus on the terminal when it opens
            echo "Could not find fish. Opened a new terminal"
        fi
	fi
}

fish() {
    launch-shell /usr/bin/fish fish $FISH_ID
}


zsh() {
    launch-shell /usr/bin/zsh Zsh $ZSH_ID
}

ipython() {
    launch-shell /usr/bin/ipython3 IPython $IPYTHON_ID
}

function prompt-press() {
	test_file="/tmp/.key_press_wait"
	id="prompt"
	if cat "$test_file" | grep "$id" ; then
        echo "Executing: gdbus call --session --dest org.gnome.Shell --object-path /org/gnome/Shell --method org.gnome.Shell.Eval string:'Main.openRunDialog();'"
        cat "$test_file"
        gdbus call --session --dest org.gnome.Shell --object-path /org/gnome/Shell --method org.gnome.Shell.Eval string:'Main.openRunDialog();'
    else
        echo "Waiting for second press"
        echo "$id" >> "$test_file"
        echo "Wrote."
        sleep .5
        cat /dev/null > "$test_file"
        echo "Overwrote"
    fi
}


function control {
	lyx -r ~/Projects/CONTROL/Status.lyx &
	lyx -r ~/Projects/CONTROL/Progress\ Reports/daily.lyx &
	lyx -r ~/Projects/CONTROL/Progress\ Reports/weekly.lyx &
	lyx -r ~/Projects/CONTROL/Progress\ Reports/month.lyx &
	lyx -r ~/Projects/CONTROL/Progress\ Reports/season.lyx &

	okular ~/Projects/CONTROL/Status.pdf ~/Projects/CONTROL/Progress\ Reports/daily.pdf ~/Projects/CONTROL/Progress\ Reports/weekly.pdf   ~/Projects/CONTROL/Progress\ Reports/month.pdf ~/Projects/CONTROL/Progress\ Reports/season.pdf &
}


# ------

# --- File Handling ---
if [[ $1 == *.desktop ]]; then
	TYPE=$(grep '^Type' "$1" | tail -1 | sed 's/^Type=//' | sed 's/%.//' | sed 's/^"//g' | sed 's/" *$//g')

	case $TYPE in
	"Application")
		eval $(grep '^Exec' "$1" | tail -1 | sed 's/^Exec=//' | sed 's/%.//' | sed 's/^"//g' | sed 's/" *$//g') ;;
	"Link")
		URL=$(grep '^URL' "$1" | tail -1 | sed 's/^URL=//' | sed 's/%.//' | sed 's/^"//g' | sed 's/" *$//g')
		google-chrome "$URL" ;;
	esac

# -------
else


# --- Simple functions ---

# declare -A launchers=(
# 	["example"]="echo example command"
# ) # Dictionary for short commands.

# if [ -n  "${launchers[$1]}"]; then
# 	echo "$1" found in minimal launchers.
# 	eval "${launchers[$1]}"
# ------

# --- Complex Function ---
# else
	echo evaluating "$1"
	eval "$1"
# ------
fi
